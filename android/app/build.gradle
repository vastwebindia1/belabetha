def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

/*def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}*/


android {
    compileSdkVersion 31
    ndkVersion '22.1.7171670'
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.jstpay.jstpay"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    /* signingConfigs {
         release {
             keyAlias keystoreProperties['keyAlias']
             keyPassword keystoreProperties['keyPassword']
             storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
             storePassword keystoreProperties['storePassword']
         }
     }*/

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    buildTypes {
        release {
            minifyEnabled false
            useProguard false
            shrinkResources false
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

        }
    }
}

flutter {
    source '../..'
}

dependencies {
    /*implementation 'in.credopay.payment.sdk:vm30-payment-sdk:1.1.3'*/
    implementation('in.credopay.payment.sdk:vm30-payment-sdk:1.1.4')
            {
                exclude module: 'logging-interceptor'
                exclude group: 'org.json'
            }

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    implementation group: 'org.bouncycastle', name: 'bcprov-ext-jdk15on', version: '1.54'

    implementation 'com.journeyapps:zxing-android-embedded:2.0.1@aar'
    implementation 'com.journeyapps:zxing-android-legacy:2.0.1@aar'
    implementation 'com.journeyapps:zxing-android-integration:2.0.1@aar'
    implementation 'com.google.zxing:core:3.0.1'
    implementation files('lib\\java-json.jar')
    implementation platform('com.google.firebase:firebase-bom:28.4.0')

    implementation ('in.payu:payu-checkout-pro:1.7.6')
            {
                exclude module: 'payu'
                exclude group: 'org.json'
            }

}
